/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Common setup for all projects.

if (project != project.rootProject) {
  throw new GradleException("Applicable to rootProject only: " + project.path)
}

allprojects {project ->
  // All projects have the base plugin (convention tasks like 'check', etc.)
  apply plugin: 'base'

  // Configure build option groups.
  project.plugins.apply(org.apache.lucene.gradle.plugins.help.BuildOptionGroupsPlugin)

  // Project group and version.
  group = "org.apache.lucene"
  version = rootProject.version

  // Source repositories for dependencies.
  repositories {
    mavenCentral()
  }

  // Common archive artifact naming.
  var baseExt = project.getExtensions().getByType(BasePluginExtension)
  baseExt.archivesName.convention(project.path.replaceAll("^:", "").replace(':', '-'))

  // Common support for reproducible builds.
  tasks.withType(AbstractArchiveTask).configureEach {
    duplicatesStrategy = DuplicatesStrategy.FAIL
    preserveFileTimestamps = false
    reproducibleFileOrder = true
    dirPermissions {
      it.unix(0755)
    }
    filePermissions {
      it.unix(0644)
    }
  }

  // Common tasks or meta-tasks.
  tasks.register("tidy", {
    description = "Applies all code formatters and other enforced cleanups to the project."
    group = "verification"
  })
}
