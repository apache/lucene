/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Apply cleanups to gradle/libs.gradle.toml

if (project != project.rootProject) {
  throw new GradleException("Applicable to rootProject only: " + project.path)
}

project.plugins.apply(deps.plugins.versionCatalogUpdate.get().pluginId)

versionCatalogUpdate {
  sortByKey = true

  versionCatalogs {
    deps {
      catalogFile = file("gradle/libs.versions.toml")
    }
  }
}

def formatDepsTask = tasks.named("versionCatalogFormatDeps")
def updateDepsTask = tasks.named("versionCatalogUpdateDeps")

tasks.named("tidy").configure {
  it.dependsOn(formatDepsTask)
}

// correct crlf/ default encoding after version catalog formatting finishes.
formatDepsTask.configure {
  it.doLast {
    ant.fixcrlf(file: it.catalogFile.get().asFile,
    eol: "lf", fixlast: "true", encoding: "UTF-8")
  }
}

updateDepsTask.configure {
  it.interactive = true
}

tasks.register("updateDeps", {
  dependsOn updateDepsTask
})
