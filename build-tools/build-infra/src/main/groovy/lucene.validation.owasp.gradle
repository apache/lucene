/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


// This adds OWASP vulnerability validation of project dependencies

if (project != project.rootProject) {
  throw new GradleException("Applicable to rootProject only: " + project.path)
}

// If -Pvalidation.owasp=true is set the validation will also run as part of the check task.
Provider<Boolean> owaspOption = buildOptions.addBooleanOption("validation.owasp",
    "Enable OWASP vulnerability check for dependencies.", false)

Provider<Integer> owaspThresholdOption = buildOptions.addIntOption("validation.owasp.threshold",
    "Owasp validation threshold to fail the build, if exceeded.", 7)

Provider<String> owaspApiKey = buildOptions.addOption("validation.owasp.apikey",
    "Owasp validation API key (https://nvd.nist.gov/developers/request-an-api-key).")

if (owaspOption.get() || gradle.startParameter.taskNames.contains("owasp")) {
  plugins.apply(deps.plugins.owasp.dependencycheck.get().pluginId)

  dependencyCheck {
    failBuildOnCVSS = owaspThresholdOption.get()
    formats = ['HTML', 'JSON']
    skipProjects = []
    skipConfigurations = ['unifiedClasspath']
    suppressionFile = rootProject.layout.projectDirectory.file("gradle/validation/owasp/exclusions.xml")

    if (owaspApiKey.isPresent()) {
      nvd.apiKey = owaspApiKey.get()
    }
  }

  def owaspTask = tasks.register("owasp", {
    group = "Verification"
    description = "Check project dependencies against OWASP vulnerability database."
    dependsOn "dependencyCheckAggregate"
  })

  // Unless explicitly enabled, do not attach owasp to check. It has a large download
  // footprint and takes a significant amount of time. This should be enabled for
  // nightly CI runs only, I think.
  if (owaspOption.get()) {
    tasks.named("check").configure {
      dependsOn owaspTask
    }
  }
}
