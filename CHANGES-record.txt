This is a record of changes to the modernized gradle build.


* Instead of the "propertyOrDefault", an external
plugin for configuring various build options is now used:

https://github.com/carrotsearch/gradle-build-infra#plugin-comcarrotsearchgradlebuildinfrabuildoptionsbuildoptionsplugin

this plugin will source the given build option from several places, in
order:

- system property (-Dfoo=value),
- gradle property (-Pfoo=value),
- environment variable (foo=value ./gradlew ...)
- a *not versioned*, build-options.local.properties property file,
- a *versioned* build-options.properties property file.

It works much like before - you can override any build option
temporarily by passing, for example "-Ptests.verbose=true". But you
can also make such tweaks persistent (locally) by placing them
in your build-options.local.properties file.


The biggest gain from using this plugin is that you can now see
all options and their values, including their source (where their
value is defined). For example:

./gradlew :buildOptions
./gradlew -p lucene/core buildOptions


* Lucene's "base" version is now a build option. The default
value is in build-options.properties. You can override
any of ```version.suffix```, ```version.base``` or ```version.release```
using any of build option plugin's methods (see above).


* ```runtime.java.home``` is a build option now but the support for
```RUNTIME_JAVA_HOME``` env. variable has been implemented for backward
compatibility.

* ```build-tools/missing-doclet``` is now a regular project within Lucene (not
an included composite project). This simplifies the build and ensures we apply
the same checks to this subproject as we do to everything else.

* ```tests.neverUpToDate``` option is renamed ```tests.rerun```; value of
```true``` indicates test tasks will re-run even if nothing has changed.

* parts of the build supporting security manager settings have been just
removed, without any replacement.

* The legacy ```precommit``` task has been removed; use gradle's ```check```.

