/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-library'

description = 'Geospatial search'

configurations {
  spatial4jTestPatch
}

dependencies {
  moduleApi project(':lucene:core')
  moduleApi project(':lucene:spatial3d')

  moduleApi 'org.locationtech.spatial4j:spatial4j'
  moduleApi 'io.sgr:s2-geometry-library-java'

  moduleTestImplementation project(':lucene:test-framework')
  moduleTestImplementation project(':lucene:spatial-test-fixtures')
  moduleTestImplementation 'org.locationtech.jts:jts-core'

  // We add patched modules to this configuration because otherwise IDEs would not see the
  // dependency at all, even in classpath mode (they don't see --patch-module commands we
  // add to the compiler and test tasks).
  moduleTestPatchOnly 'org.locationtech.spatial4j:spatial4j::tests'
  spatial4jTestPatch 'org.locationtech.spatial4j:spatial4j::tests'
}

sourceSets.test.extensions.configure("modularPaths", {
  it.patchModule("spatial4j", project.providers.provider({ configurations.spatial4jTestPatch.singleFile }))
})