/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// This project puts together the Lucene "distribution", assembling bits and pieces
// from across the project structure into release artifacts.

ext {
  releaseDir = file("${buildDir}/release")
}


// Prepare the HTML-rendered "changes" distribution artifact.
// Just set up a dependency on the documentation-produced artifact.
configurations {
  changesHtml
}

dependencies {
  changesHtml project(path: ":lucene:documentation", configuration: "changesHtml")
}


// Prepare the "source" distribution artifact. We use raw git export, no additional complexity needed.
task assembleSourceTgz() {
  description "Assemble source Lucene artifact as a .tgz file."

  // Make sure no unstaged/ dirty files are present.
  dependsOn ":gitStatus", ":checkWorkingCopyClean"

  ext {
    destination = file("${buildDir}/packages/lucene-${version}-src.tgz")
  }

  inputs.property("git-revision", { -> rootProject.ext.gitRev } )
  outputs.file destination

  doFirst {
    quietExec {
      executable = project.externalTool("git")
      workingDir = project.rootDir

      args += [
          "archive",
          "--format", "tgz",
          "--prefix", "lucene-${version}/",
          "--output", destination,
          "HEAD"
      ]
    }
  }
}


// Prepare the "binary" distribution artifact.
apply from: buildscript.sourceFile.toPath().resolveSibling("binary-artifacts.gradle")
apply from: buildscript.sourceFile.toPath().resolveSibling("binary-release.gradle")


// Configure maven artifact collection to a local build folder (required to collect artifacts for the release).
apply from: buildscript.sourceFile.toPath().resolveSibling("maven-to-build.gradle")


// Assemble everything needed in the release folder structure.
task assembleRelease(type: Sync) {
  description "Assemble all Lucene artifacts for a release."

  from(configurations.changesHtml, {
    into "changes"
  })

  from(tasks.mavenToBuild, {
    into "maven"
  })

  from(tasks.assembleSourceTgz, {
  })

  from(tasks.assembleBinaryZip, {
  })

  from(tasks.assembleBinaryTgz, {
  })

  into releaseDir
}


// Add the description and task group to some of the tasks.
tasks.matching {it.name in [
    "assembleSourceTgz",
    "assembleBinaryZip",
    "assembleBinaryTgz",
    "assembleRelease",
]}.all {
  group "publishing"
}


// Hook into convention tasks.
assemble.dependsOn assembleRelease
