name: Run smokeTestRelease.py against a release candidate

on:
  workflow_dispatch:
    inputs:
      run-tests:
        description: "Include a full test run"
        type: boolean
        required: false
        default: false

jobs:
  smokeTestRelease:
    name: "smoke jdk ${{ matrix.java-version }}, ${{ matrix.os }}"

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        java-version: [ '17', '21', '22-ea' ]

    runs-on: ${{ matrix.os }}

    env:
      LUCENE_RELEASE_DIR: /tmp/lucene-release-dir

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-package: jdk
          check-latest: true
          # This intentionally lists two versions, the last one is used as the system default (for running gradle).
          java-version: |
            ${{ matrix.java-version }}
            17

      - name: Echo diagnostic paths and locations
        run: |
          echo "All installed JDKs:"
          set | grep "JAVA"

          echo "Build matrix-picked JDK:"
          RUNTIME_JAVA_HOME_VAR=JAVA_HOME_`echo ${{ matrix.java-version }} | egrep --only "[0-9]+"`_X64
          echo ${RUNTIME_JAVA_HOME_VAR} points at ${!RUNTIME_JAVA_HOME_VAR}

      - name: Run buildAndPushRelease.py (in dev mode, locally)
        run: |
          # Assemble a release in dev mode, locally.
          python3 ./dev-tools/scripts/buildAndPushRelease.py --dev-mode --push-local ${{ LUCENE_RELEASE_DIR }}

      - name: Run smokeTestRelease.py (runtime java: ${{ matrix.java-version }})
        run: |
          RUNTIME_JAVA_HOME_VAR=JAVA_HOME_`echo ${{ matrix.java-version }} | egrep --only "[0-9]+"`_X64

          python3 -u dev-tools/scripts/smokeTestRelease.py \
            --not-signed \
            file://`realpath ${{ LUCENE_RELEASE_DIR }}/lucene*` \
            ${{ inputs.run-tests && ' ' || '-Dtests.filter="@skipall"' }} \
            -Druntime.java.home=${!RUNTIME_JAVA_HOME_VAR}
