name: Distribution nightly tests

on:
  pull_request:
    branches:
      - 'main'

jobs:
  test:
    name: Run distribution nightly tests

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: 17
        java-package: jdk
    - name: Save/Restore gradle cache (${{ matrix.os }})
      uses: actions/cache@v2
      if: ${{ startsWith(matrix.os, 'windows') }}
      with:
        path: |
           %HOMEDRIVE%%HOMEPATH%\.gradle\caches
        key: ${{ runner.os }}-gradle-distribution-${{ hashFiles('versions.lock') }}
        restore-keys: |
          ${{ runner.os }}-gradle-distribution-
          ${{ runner.os }}-gradle-
    - name: Save/Restore gradle cache (${{ matrix.os }})
      uses: actions/cache@v2
      if: ${{ ! startsWith(matrix.os, 'windows') }}
      with:
        path: |
          ~/.gradle/caches
        key: ${{ runner.os }}-gradle-distribution-${{ hashFiles('versions.lock') }}
        restore-keys: |
          ${{ runner.os }}-gradle-distribution-
          ${{ runner.os }}-gradle-
    - name: Initialize gradle settings (${{ matrix.os }})
      if: ${{ startsWith(matrix.os, 'windows') }}
      run: .\gradlew localSettings
    - name: Initialize gradle settings (${{ matrix.os }})
      if: ${{ ! startsWith(matrix.os, 'windows') }}
      run: ./gradlew localSettings
    - name: Run all distribution tests including Nightly (${{ matrix.os }})
      if: ${{ startsWith(matrix.os, 'windows') }}
      run: .\gradlew -p "lucene\distribution.tests" test "-Dtests.nightly=true"
    - name: Run all distribution tests including Nightly (${{ matrix.os }})
      if: ${{ ! startsWith(matrix.os, 'windows') }}
      run: ./gradlew -p lucene/distribution.tests/ test -Dtests.nightly=true
