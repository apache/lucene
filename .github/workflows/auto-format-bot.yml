name: Lucene Auto Format Bot

on:
  issue_comment:
    types: [created]

env:
  DEVELOCITY_ACCESS_KEY: ${{ secrets.DEVELOCITY_ACCESS_KEY }}

jobs:
  format-check:
    # Only run on pull requests when the bot is mentioned
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/format-fix apply')
    runs-on: ubuntu-latest
    timeout-minutes: 30

    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Check permissions
        uses: actions/github-script@v7
        with:
          script: |
            const actorPermission = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: context.actor
            });

            const permission = actorPermission.data.permission;
            const hasPermission = ['admin', 'write'].includes(permission);

            if (!hasPermission) {
              core.setFailed(`‚ùå User @${context.actor} does not have permission to run the format bot. Required: admin or write access.`);
              return;
            }

            console.log(`‚úÖ User @${context.actor} has ${permission} permission - proceeding with format bot.`);

      - name: Get PR details
        id: pr_details
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            return {
              head_ref: pr.head.ref,
              head_sha: pr.head.sha,
              base_ref: pr.base.ref,
              base_sha: pr.base.sha,
              clone_url: pr.head.repo.clone_url,
              ssh_url: pr.head.repo.ssh_url,
              repo_full_name: pr.head.repo.full_name
            };

      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          repository: ${{ fromJson(steps.pr_details.outputs.result).repo_full_name }}
          ref: ${{ fromJson(steps.pr_details.outputs.result).head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - uses: ./.github/actions/prepare-for-build

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            **/*.java
            **/*.gradle
            **/*.groovy
            **/*.md
            **/*.properties
            **/*.xml
            **/*.py
            **/*.sh
            **/*.bat
            **/*.cmd

      - name: Initial validation
        id: initial-validation
        continue-on-error: true
        run: |
          echo "Running initial validation..."
          ./gradlew check -x test

      - name: Fix formatting issues
        if: steps.initial-validation.outcome == 'failure'
        run: |
          echo "Fixing formatting issues..."
          ./gradlew tidy

      - name: Commit fixes if any
        if: steps.initial-validation.outcome == 'failure'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Lucene Format Bot"
          git add .
          if ! git diff --staged --quiet; then
            git commit -m "Apply automatic formatting fixes

            Fixes applied by @lucene-format-bot in response to:
            ${{ github.event.comment.html_url }}

            Original PR: #${{ github.event.issue.number }}"
            git push
          fi

      - name: Final validation
        run: |
          echo "Running final validation..."
          ./gradlew check -x test

      - name: EditorConfig validation
        if: steps.changed-files.outputs.any_changed == 'true'
        continue-on-error: true
        run: |
          # Install editorconfig-checker
          echo "Installing editorconfig-checker..."
          curl -L https://github.com/editorconfig-checker/editorconfig-checker/releases/download/v3.0.3/ec-linux-amd64.tar.gz -o /tmp/ec.tar.gz
          tar -xzf /tmp/ec.tar.gz -C /tmp
          chmod +x /tmp/bin/ec-linux-amd64

          # Check changed files only
          echo "Validating EditorConfig compliance for changed files..."
          echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | while read file; do
            if [ -f "$file" ]; then
              echo "Checking: $file"
              /tmp/bin/ec-linux-amd64 "$file" || true
            fi
          done

      - name: Comment on PR with success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## ‚úÖ Formatting Complete

            The formatting bot has successfully processed this PR!

            ### üîß Changes Applied
            - ‚úÖ **Full validation**: \`./gradlew check -x test\`
            - ‚úÖ **Formatting fixes**: \`./gradlew tidy\` (applied if needed)
            - ‚úÖ **EditorConfig validation**: Checked compliance for changed files
            - ‚úÖ **Final validation**: Confirmed all checks pass

            ### üìù Details
            - **Triggered by**: ${{ github.event.comment.html_url }}
            - **Files checked**: ${{ steps.changed-files.outputs.all_changed_files_count || '0' }} files
            - **Validation**: All formatting checks now pass

            The PR is now ready for review!

            ---
            *This was performed automatically by the Lucene Format Bot ü§ñ*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Comment on PR with failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## ‚ùå Formatting Failed

            The formatting bot encountered issues while processing this PR.

            ### üîç What was attempted:
            - ‚úÖ **File detection**: Found ${{ steps.changed-files.outputs.all_changed_files_count || '0' }} changed files
            - ‚ùå **Validation/Formatting**: One or more steps failed

            ### üõ†Ô∏è Next Steps:
            1. Check the workflow logs for specific error details
            2. Fix any issues manually if needed
            3. Re-trigger the bot with \`@lucene-format-bot\`

            ### üìù Details
            - **Triggered by**: ${{ github.event.comment.html_url }}
            - **Files processed**: ${{ steps.changed-files.outputs.all_changed_files || 'None detected' }}

            ---
            *This was performed automatically by the Lucene Format Bot ü§ñ*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
